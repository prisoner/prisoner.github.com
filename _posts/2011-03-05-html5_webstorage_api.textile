---
layout: post
title: HTML5 Web Storage
---

先来两个链接 "http://dev.w3.org/html5/webstorage/":http://dev.w3.org/html5/webstorage/ "http://diveintohtml5.org/storage.html":http://diveintohtml5.org/storage.html
在没有html5支持的情况下, 我们想要在客户端(broswer)上存储点什么东西, 简直就是个灾难...
最常见的就是存储在cookie当中, 但是cookie的储存能力小得可怜.

| | Firefox(3.6) |	Opera(10.x) |	chrome(5.x)	| IE6	IE7/IE8 |
|单个cookie字节数|4097| 4051 |	4051 | 4096 | 5072 |
|总字节数 | 204850 | 4997 | server端控制 | 4096 | 10239 |

你还可以使用Flash "Flash SOL: Persistent Data with Local SharedObjects":http://www.yuiblog.com/blog/2009/06/23/flash-sol/ 或者 Google家的 "Gears":http://gears.google.com/
但是这个两个东东都不是很好使, 所以我们有了web storage. 使用它的好处blah blah blah blah....

先看看各浏览器的支持情况:
* Internet Explorer 8+
* Firefox 3.5+
* Google Chrome 4+
* Safari 4+
* Opera 10.5+
基本上现代化设备都支持的. 网上有人传说web storage的存储空间至少有5MB, 但我并没有在规范中看到对此的描述, 有待考证.

web storage分为
* sessionStorage
sessionStorage在当前会话窗口有效, 储存的数据会在窗口关闭之后被清除.在FF3.6 chrome9测试之后,发现即使打开同一页面不同的标签也无法访问彼此的sessionStorage.
注意:在同一窗口或标签跳转到其它页面并不会清除储存的数据, 即使跳转到其它站点的页面.
* localStorage
localStorage是在本地永久存储的. 它会在同一源下的所有窗口或标签中有效, 关闭窗口或标签之后也不会被清除.

sessionStorage和localStorage都是使用Storage接口来进行操作.

{%highlight java%}

interface Storage {
  //共有多少个对象
  readonly attribute unsigned long length;
  //根据下标获取键值
  getter DOMString key(in unsigned long index);
  //根据键值取值
  getter any getItem(in DOMString key);
  //存储值对
  setter creator void setItem(in DOMString key, in any data);
  //根据键删除值
  deleter void removeItem(in DOMString key);
  //清空所有对象
  void clear();
};

{% endhighlight %}

根据规范说明, key是字符串(即使是空字符串), 而值是 "any data type supported by the structured clone algorithm" , 不太清楚是什么意思.

